#!/usr/bin/env python3
"""
Simple Port Scanner Tool
Author: Iyanuoluwa Odusanya
Description: Scans for open ports on target hosts
"""

import socket
import sys
from datetime import datetime
import threading


class PortScanner:
    def __init__(self, target_host):
        self.target_host = target_host
        self.open_ports = []

    def scan_port(self, port):
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((self.target_host, port))
            if result == 0:
                self.open_ports.append(port)
                print(f"Port {port}: Open")
            sock.close()
        except socket.gaierror:
            print("Hostname could not be resolved")
        except socket.error:
            print("Could not connect to host")

    def scan_range(self, start_port, end_port):
        print(f"\nStarting port scan on {self.target_host}")
        print(f"Time started: {datetime.now()}")
        print("-" * 50)

        threads = []
        for port in range(start_port, end_port + 1):
            thread = threading.Thread(target=self.scan_port, args=(port,))
            threads.append(thread)
            thread.start()

        for thread in threads:
            thread.join()

        print(f"\nScan completed at: {datetime.now()}")
        print(f"Open ports found: {self.open_ports}")


if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python3 port_scanner.py <target_ip>")
        sys.exit(1)

    target = sys.argv[1]
    scanner = PortScanner(target)
    scanner.scan_range(1, 1024)



